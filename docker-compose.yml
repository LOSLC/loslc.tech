services:
  frontend:
    build: 
      context: ./frontend
      args:
        - BACKEND_URL=${BACKEND_URL}
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      - BACKEND_URL=${BACKEND_URL}
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build: 
      context: ./backend
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - APP_URL=${APP_URL}
      - PORT=${BACKEND_PORT}
      
      - DATABASE_URL=${DATABASE_URL}
      
      - MAIL_SERVICE=${MAIL_SERVICE}
      - APP_EMAIL=${APP_EMAIL}
      - SADMIN_EMAIL=${SADMIN_EMAIL}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      
      - OTP_EXPIRATION_MINUTES=${OTP_EXPIRATION_MINUTES}
      - AUTH_SESSION_EXPIRATION_DAYS=${AUTH_SESSION_EXPIRATION_DAYS}
      - EMAIL_VERIFICATION_EXPIRATION_HOURS=${EMAIL_VERIFICATION_EXPIRATION_HOURS}
      - PASSWORD_RESET_EXPIRATION_MINUTES=${PASSWORD_RESET_EXPIRATION_MINUTES}
      
      - DEBUG=${DEBUG}
      - STORAGE=${STORAGE}
      - CORS_ORIGIN=${CORS_ORIGIN}
      
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}

    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "https://${BACKEND_URL}/hc"]
      interval: 1s
      timeout: 5s
      retries: 60

    volumes:
      - app_storage:/home/app/app/${STORAGE}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  app_storage:
