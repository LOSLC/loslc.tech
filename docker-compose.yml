services:
  frontend:
    build: 
      context: ./frontend
      args:
        - DATABASE_URL=${DATABASE_URL}
        - FRONTEND_PORT=${FRONTEND_PORT}
        - BACKEND_PORT=${BACKEND_PORT}
        - PG_USER=${PG_USER}
        - PG_PASSWORD=${PG_PASSWORD}
        - PG_DB=${PG_DB}
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}

  backend:
    build: 
      context: ./backend
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
    depends_on:
      - db

  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
